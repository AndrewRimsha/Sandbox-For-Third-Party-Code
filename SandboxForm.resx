<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>